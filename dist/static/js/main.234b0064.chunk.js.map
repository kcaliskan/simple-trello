{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","history.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","signOut","credentials","dispacth","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","onClick","profile","initials","SignedOutLinks","state","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","format","ProjectList","projects","map","id","key","projects_ProjectSummary","Notifications","notifications","console","log","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","_this","signIn","handleChange","setState","Object","defineProperty","target","value","authError","onSubmit","htmlFor","onChange","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","dispatch","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createHistory","CreateProject","createProject","userId","add","objectSpread","authorId","Date","docRef","projectId","updatedProject","history","push","concat","App","Router","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","response","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","arguments","length","undefined","action","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","settings","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.234b0064.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signOut } from \"../../store/actions/authActions\";\n\nconst SignedInLinks = props => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\">New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={props.signOut}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {props.profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default connect(\n  null,\n  { signOut }\n)(SignedInLinks);\n","export const signIn = credentials => {\n  return (dispacth, getState, { getFirebase }) => {\n    // make async call to database\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispacth({ type: \"LOGIN_SUCCESS\" });\n      })\n      .catch(err => {\n        dispacth({ type: \"LOGIN_ERROR\", err });\n      });\n  };\n};\n\nexport const signOut = credentials => {\n  return (dispacth, getState, { getFirebase }) => {\n    // make async call to database\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispacth({ type: \"SIGNOUT_SUCCESS\" });\n      });\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection(\"users\")\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0]\n          });\n      })\n      .then(() => {\n        dispatch({ type: \"SIGNUP_SUCCESS\" });\n      })\n      .catch(err => {\n        dispatch({ type: \"SIGNUP_ERROR\", err });\n      });\n  };\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\">Sign Up</NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\">Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SignedInLinks from \"./SignedInLinks\";\nimport SignedOutLinks from \"./SignedOutLinks\";\nimport { connect } from \"react-redux\";\n\nconst Navbar = props => {\n  const { auth } = props;\n  // console.log(auth);\n  const links = auth.uid ? (\n    <SignedInLinks profile={props.profile} />\n  ) : (\n    <SignedOutLinks profile={props.profile} />\n  );\n\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          Simple Trello\n        </Link>\n        {links}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  };\n};\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst ProjectSummary = ({ project }) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{project.title}</span>\n        <p>\n          Posted by the {project.authorFirstName} {project.authorLastName}\n        </p>\n        <p className=\"grey-text\">\n          {moment(project.createdAt.toDate()).format(\"MMMM Do YYYY, h:mm:ss a\")}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from \"react\";\nimport ProjectSummary from \"./ProjectSummary\";\nimport { Link } from \"react-router-dom\";\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className=\"project-list section\">\n      {projects &&\n        projects.map(project => {\n          return (\n            <Link to={\"/project/\" + project.id} key={project.id}>\n              <ProjectSummary project={project} />\n            </Link>\n          );\n        })}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React from \"react\";\nimport moment from \"moment\";\n\nconst Notifications = props => {\n  const { notifications } = props;\n  console.log(props);\n\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            {notifications &&\n              notifications.map(item => {\n                return (\n                  <li key={item.id}>\n                    <span className=\"pink-text\">{item.user} </span>\n                    <span>{item.content}</span>\n                    <div className=\"grey-text note-date\">\n                      {moment(item.time.toDate()).fromNow()}\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notifications;\n","import React, { Component } from \"react\";\nimport ProjectList from \"../projects/ProjectList\";\nimport Notifications from \"./Notifications\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\n\nclass Dashboard extends Component {\n  render() {\n    const { projects, auth, notifications } = this.props;\n    console.log(notifications);\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  // console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: \"projects\", orderBy: [\"createdAt\", \"desc\"] },\n    { collection: \"notifications\", limit: 3, orderBy: [\"time\", \"desc\"] }\n  ])\n)(Dashboard);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\n\nfunction ProjectDetails(props) {\n  const { project, auth } = props;\n  if (!auth.uid) return <Redirect to=\"/signin\" />;\n\n  if (project) {\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\" key={project.id}>\n          <div className=\"card-content\">\n            <span className=\"card-title\">{project.title}</span>\n            <p>{project.content}</p>\n          </div>\n          <div className=\"card-action grey lighten-4 grey-text\">\n            <div>\n              Posted by {project.authorFirstName} {project.authorLastName}\n            </div>\n            <div>\n              {\" \"}\n              {moment(project.createdAt.toDate()).format(\n                \"MMMM Do YYYY, h:mm:ss a\"\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: \"projects\" }])\n)(ProjectDetails);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { signIn } from \"../../store/actions/authActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass SignIn extends Component {\n  state = { email: \"\", password: \"\" };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signIn(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to=\"/\" />;\n    }\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n            <div className=\"red-text center\">\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { authError: state.auth.authError, auth: state.firebase.auth };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signIn }\n)(SignIn);\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { signUp } from \"../../store/actions/authActions\";\n\nclass SignUp extends Component {\n  state = { email: \"\", password: \"\", firstName: \"\", lastName: \"\" };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.signUp(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n    if (auth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n            {authError ? <p>{authError}</p> : null}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { authError: state.auth.authError, auth: state.firebase.auth };\n};\n\nexport default connect(\n  mapStateToProps,\n  { signUp }\n)(SignUp);\n","import createHistory from \"history/createBrowserHistory\";\n\nexport default createHistory();\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../store/actions/projectActions\";\nimport { Redirect } from \"react-router-dom\";\n\nclass CreateProject extends Component {\n  state = { title: \"\", content: \"\" };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.createProject(this.state);\n    // console.log(this.state);\n  };\n\n  handleChange = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n\n  render() {\n    const { auth } = this.props;\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project Content</label>\n            <textarea\n              id=\"content\"\n              onChange={this.handleChange}\n              className=\"materialize-textarea\"\n            />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { auth: state.firebase.auth };\n};\n\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(CreateProject);\n","// export const createProject = project => {\n//   return (dispacth, getState, { getFirebase, getFirestore }) => {\n//     // make async call to database\n//     const firestore = getFirestore();\n//     const profile = getState().firebase.profile;\n//     const userId = getState().firebase.auth.uid;\n//     const collection = firestore.collection(\"projects\").doc(document.id);\n//     firestore\n//       .collection(\"projects\")\n//       .add({\n//         ...project,\n//         authorFirstName: profile.firstName,\n//         authorLastName: profile.lastName,\n//         authorId: userId,\n//         createdAt: new Date()\n//       })\n//       .then(() => {\n//         dispacth({ type: \"CREATE_PROJECT\", project });\n//         console.log(collection);\n//       })\n//       .catch(err => {\n//         dispacth({ type: \"CREATE_PROJECT_ERROR\", err });\n//       });\n//   };\n// };\nimport history from \"../../history\";\n\nexport const createProject = project => {\n  return (dispacth, getState, { getFirebase, getFirestore }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const userId = getState().firebase.auth.uid;\n    firestore\n      .collection(\"projects\")\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId: userId,\n        createdAt: new Date()\n      })\n      .then(docRef => {\n        const updatedProject = { ...project, projectId: docRef.id };\n        return updatedProject;\n      })\n      .then(updatedProject => {\n        dispacth({ type: \"CREATE_PROJECT\", updatedProject });\n        history.push(`/project/${updatedProject.projectId}`);\n      })\n      .catch(err => {\n        dispacth({ type: \"CREATE_PROJECT_ERROR\", err });\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from \"./components/projects/ProjectDetails\";\nimport SignIn from \"./components/auth/SignIn\";\nimport SignUp from \"./components/auth/SignUp\";\nimport CreateProject from \"./components/projects/CreateProject\";\nimport history from \"./history\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router history={history}>\n        <div className=\"App\">\n          <Navbar />\n          {/*\n          Switch makes sure that only one route is loaded up at a time and  the route that is loaded up is the first that react matches inside here.\n           */}\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        authError: null\n      };\n    case \"LOGIN_ERROR\":\n      return {\n        ...state,\n        authError: \"Login Failed\"\n      };\n    case \"SIGNOUT_SUCCESS\":\n    case \"SIGNUP_SUCCESS\":\n      return {\n        ...state\n      };\n    case \"SIGNUP_ERROR\":\n      return {\n        ...state,\n        authError: action.err\n      };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","import history from \"../../history\";\nconst initState = {\n  projects: [\n    { id: \"1\", title: \"help me find peach\", content: \"blah blah blah\" },\n    { id: \"2\", title: \"collect all the stars\", content: \"blah blah blah\" },\n    { id: \"3\", title: \"egg hunt with yoshi\", content: \"blah blah blah\" }\n  ]\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case \"CREATE_PROJECT\":\n      return state;\n    case \"CREATE_PROJECT_ERROR\":\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import authReducer from \"./authReducer\";\nimport projectReducer from \"./projectReducer\";\nimport { combineReducers } from \"redux\";\nimport { firestoreReducer } from \"redux-firestore\";\nimport { firebaseReducer } from \"react-redux-firebase\";\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer;\n","import firebase, { auth } from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyDGI0d9e0rfgf0r-USlvoLfaQMXubVAU_s\",\n  authDomain: \"simple-trello-1291.firebaseapp.com\",\n  databaseURL: \"https://simple-trello-1291.firebaseio.com\",\n  projectId: \"simple-trello-1291\",\n  storageBucket: \"simple-trello-1291.appspot.com\",\n  messagingSenderId: \"1094779087119\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({});\nexport default firebase;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport { reduxFirestore, getFirestore } from \"redux-firestore\";\nimport { reactReduxFirebase, getFirebase } from \"react-redux-firebase\";\nimport fbConfig from \"./config/fbConfig\";\n\n// We want the \"Firebase Reducer\" to use Firestore to sync profile on the state by using this -> \"useFirestoreForProfile: true\".\n// We \"tell\" the Firebase reducer to where the get users date/ from which collection by using this -> userProfile: \"users\".\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {\n      useFirestoreForProfile: true,\n      userProfile: \"users\",\n      attachAuthIsReady: true\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById(\"root\")\n  );\n  registerServiceWorker();\n});\n"],"sourceRoot":""}